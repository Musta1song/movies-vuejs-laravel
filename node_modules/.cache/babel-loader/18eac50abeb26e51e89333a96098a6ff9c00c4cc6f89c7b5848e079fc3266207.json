{"ast":null,"code":"export default {\n  name: 'SearchMovies',\n  data() {\n    return {\n      title: null,\n      year: null,\n      this: null,\n      data: [],\n      favoritemovie: null,\n      isLoading: false,\n      err: \"\"\n    };\n  },\n  methods: {\n    SearchMovies() {\n      if (this.title == null && this.year == null) {\n        alert(\"Geben Sie erst einen Titel oder ein Jahr ein.\");\n        return;\n      } else {\n        let titleParam = \"\";\n        let yearParam = \"\";\n        let typeParam = \"&type=movie\";\n        if (this.title != null) {\n          titleParam = `s=${this.title}`;\n        }\n        if (this.year != null) {\n          yearParam = `&y=${this.year}`;\n        }\n        let Searchthis = titleParam + yearParam + typeParam;\n        let url = `http://www.omdbapi.com/?apikey=385748cd&${Searchthis}`;\n        console.log(url);\n        this.fetchMovies(url);\n      }\n    },\n    async fetchMovies(url) {\n      try {\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Error! status: ${response.status}`);\n        }\n        const result = await response.json();\n        console.log(result.Search);\n        this.data = result.Search;\n      } catch (err) {\n        this.err = err.message;\n      } finally {\n        this.isLoading = false;\n      }\n      console.log(this.data);\n    }\n  }\n};","map":{"version":3,"names":["name","data","title","year","this","favoritemovie","isLoading","err","methods","SearchMovies","alert","titleParam","yearParam","typeParam","Searchthis","url","console","log","fetchMovies","response","fetch","method","headers","Accept","ok","Error","status","result","json","Search","message"],"sources":["/home/mustafa/Dokumente/GitHub/vuemovies/movies/src/components/search/search.vue"],"sourcesContent":["<template>\n        <v-text-field label=\"Titel\" variant=\"outlined\" v-model=\"this.title\"></v-text-field>\n        <v-text-field label=\"Erscheinungsjahr\" variant=\"outlined\" v-model=\"this.year\"></v-text-field>\n        <v-btn v-click=\"SearchMovies()\"></v-btn>\n\n        <v-data-table :items=\"this.data\"></v-data-table>\n\n</template>\n<script>\nexport default {\n    name: 'SearchMovies',\n    data() {\n        return {\n            title: null,\n            year: null,\n            this: null,\n            data: [],\n            favoritemovie: null,\n            isLoading: false,\n            err: \"\",\n\n\n        };\n    },\n    methods: {\n\n\n        SearchMovies() {\n            if (this.title == null && this.year == null) {\n                alert(\"Geben Sie erst einen Titel oder ein Jahr ein.\")\n                return\n            }\n            else {\n\n                let titleParam = \"\"\n                let yearParam = \"\"\n                let typeParam = \"&type=movie\"\n\n                if (this.title != null) {\n                    titleParam = `s=${this.title}`\n                }\n                if (this.year != null) {\n                    yearParam = `&y=${this.year}`\n                }\n                let Searchthis = titleParam + yearParam + typeParam\n                let url = `http://www.omdbapi.com/?apikey=385748cd&${Searchthis}`;\n                console.log(url)\n\n                this.fetchMovies(url)\n            }\n        },\n\n\n        async fetchMovies(url) {\n            try {\n                const response = await fetch(url, {\n                    method: 'GET',\n                    headers: {\n                        Accept: 'application/json',\n                    },\n                });\n\n                if (!response.ok) {\n                    throw new Error(`Error! status: ${response.status}`);\n                }\n\n                const result = await response.json();\n\n                console.log(result.Search)\n\n                this.data = result.Search;\n            } catch (err) {\n                this.err = err.message;\n            } finally {\n                this.isLoading = false;\n            }\n            console.log(this.data)\n        }\n\n\n    }\n}\n\n</script>\n<style scoped>\n\n\n.Datagrid {\n    height: 1000px;\n}\n\nimg {\n    height: 140px;\n}\n\n\n\n#DataGridDiv {\n    display: flex;\n    justify-content: center;\n}\n\n\n.SearchAndAdd {\n    display: flex;\n    justify-content: center;\n}\n\n#SaveBt {\n    color: red;\n    font-size: 30px;\n    background-color: antiquewhite;\n}\n</style>"],"mappings":"AASA,eAAe;EACXA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,IAAI;MACVH,IAAI,EAAE,EAAE;MACRI,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAE,KAAK;MAChBC,GAAG,EAAE;IAGT,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IAGLC,YAAYA,CAAA,EAAG;MACX,IAAI,IAAI,CAACP,KAAI,IAAK,IAAG,IAAK,IAAI,CAACC,IAAG,IAAK,IAAI,EAAE;QACzCO,KAAK,CAAC,+CAA+C;QACrD;MACJ,OACK;QAED,IAAIC,UAAS,GAAI,EAAC;QAClB,IAAIC,SAAQ,GAAI,EAAC;QACjB,IAAIC,SAAQ,GAAI,aAAY;QAE5B,IAAI,IAAI,CAACX,KAAI,IAAK,IAAI,EAAE;UACpBS,UAAS,GAAK,KAAI,IAAI,CAACT,KAAM;QACjC;QACA,IAAI,IAAI,CAACC,IAAG,IAAK,IAAI,EAAE;UACnBS,SAAQ,GAAK,MAAK,IAAI,CAACT,IAAK;QAChC;QACA,IAAIW,UAAS,GAAIH,UAAS,GAAIC,SAAQ,GAAIC,SAAQ;QAClD,IAAIE,GAAE,GAAK,2CAA0CD,UAAW,EAAC;QACjEE,OAAO,CAACC,GAAG,CAACF,GAAG;QAEf,IAAI,CAACG,WAAW,CAACH,GAAG;MACxB;IACJ,CAAC;IAGD,MAAMG,WAAWA,CAACH,GAAG,EAAE;MACnB,IAAI;QACA,MAAMI,QAAO,GAAI,MAAMC,KAAK,CAACL,GAAG,EAAE;UAC9BM,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACLC,MAAM,EAAE;UACZ;QACJ,CAAC,CAAC;QAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,kBAAiBN,QAAQ,CAACO,MAAO,EAAC,CAAC;QACxD;QAEA,MAAMC,MAAK,GAAI,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAEpCZ,OAAO,CAACC,GAAG,CAACU,MAAM,CAACE,MAAM;QAEzB,IAAI,CAAC5B,IAAG,GAAI0B,MAAM,CAACE,MAAM;MAC7B,EAAE,OAAOtB,GAAG,EAAE;QACV,IAAI,CAACA,GAAE,GAAIA,GAAG,CAACuB,OAAO;MAC1B,UAAU;QACN,IAAI,CAACxB,SAAQ,GAAI,KAAK;MAC1B;MACAU,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,IAAI;IACzB;EAGJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}