{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \" Poster \"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Title\"), /*#__PURE__*/_createElementVNode(\"th\")], -1 /* HOISTED */);\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data, x => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: x\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: x.Poster,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_2)]), _createElementVNode(\"td\", null, _toDisplayString(x.Title), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","data","x","key","src","Poster","alt","_hoisted_2","_toDisplayString","Title"],"sources":["/home/mustafa/Dokumente/GitHub/vuemovies/movies/src/components/favorites/FavoriteMovies.vue"],"sourcesContent":["<template>\n    <table>\n        <tr>\n            <th>\n                Poster\n            </th>\n            <th>Title</th>\n            <th></th>\n        </tr>\n        <tr v-for=\"x in  data \" :key=\"x\">\n            <td><img :src=\"x.Poster\" alt=\"\"></td>\n            <td>{{ x.Title }}</td>\n        </tr>\n    </table>\n\n\n</template>\n<script>\nimport DataService from '@/DataService';\nimport axios from 'axios';\nexport default {\n    name: \"FavoriteMovies\",\n\n    data() {\n        return {\n            data: [],\n            MovieList: [],\n            isLoading: false,\n            err: \"\",\n            headers: [\n\n                { title: 'Titel', value: 'Title' },\n                { title: 'Jahr', value: 'Year' },\n                { title: 'Laufzeit', value: 'Runtime' },\n                { title: 'Poster', value: 'Director' },\n                { title: 'Poster', value: 'Writer' },\n                { title: 'Poster', value: 'Actors' },\n                { title: 'Poster', value: 'Poster' },\n\n            ]\n\n        };\n    },\n\n    methods: {\n        getFavordataovies() {\n            DataService.getAll()\n                .then(response => {\n                    this.MovieList = response.data\n                    console.log(this.MovieList)\n                    this.MovieList = JSON.parse(JSON.stringify(this.MovieList))\n                    console.log(this.MovieList)\n                    this.fetchData()\n\n\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n\n\n        },\n        fetchData() {\n            const url = \"https://www.omdbapi.com/?apikey=385748cd&i=tt1119646\";\n            console.log(\"fetchData-init\")\n\n            for (let i = 0; i < this.MovieList.length; i++) {\n                console.log(\"fetchData-loop\")\n\n\n\n                axios.get(url).then(\n                    response => {\n                        this.data.push(response.data)\n                    }\n                )\n\n\n            }\n        }\n    },\n    mounted() {\n        console.log(\"halo\")\n        this.getFavordataovies();\n    }\n\n\n}\n\n</script>\n<style scoped></style>"],"mappings":";gCAEQA,mBAAA,CAMK,a,aALDA,mBAAA,CAEK,YAFD,UAEJ,G,aACAA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAS,M;mBAPrB;;uBACIC,mBAAA,CAYQ,gBAXJC,UAMK,G,kBACLD,mBAAA,CAGKE,SAAA,QAZbC,WAAA,CASyBC,KAAA,CAAAC,IAAI,EAAVC,CAAC;yBAAZN,mBAAA,CAGK;MAHoBO,GAAG,EAAED;IAAC,IAC3BP,mBAAA,CAAqC,aAAjCA,mBAAA,CAA4B;MAAtBS,GAAG,EAAEF,CAAC,CAACG,MAAM;MAAEC,GAAG,EAAC;4BAVzCC,UAAA,E,GAWYZ,mBAAA,CAAsB,YAAAa,gBAAA,CAAfN,CAAC,CAACO,KAAK,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}