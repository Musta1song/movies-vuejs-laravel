{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  className: \"rates\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"1\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_3]);\n}","map":{"version":3,"names":["className","_createElementVNode","id","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3"],"sources":["/home/mustafa/Dokumente/GitHub/vuemovies/movies/src/components/favorites/FavoriteMovies.vue"],"sourcesContent":["<template>\n    <div className=\"rates\">\n        <div id='1'></div>\n\n    </div>\n</template>\n<script>\nimport DataService from '@/DataService';\nexport default {\n    name: \"FavoriteMovies\",\n\n    data() {\n        return {\n            data: [],\n            MovieList: [],\n            isLoading: false,\n            err: \"\"\n\n        };\n    },\n\n    methods: {\n        getFavoriteMovies() {\n            DataService.getAll()\n                .then(response => {\n                    this.MovieList = response.data\n                    console.log(this.MovieList)\n                    console.log(JSON.parse(JSON.stringify(this.MovieList))) \n                    for (let i = 0; i < this.MovieList.length; i++) {\n\n                    this.fetchData(i)\n                    }\n\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n\n\n        },\n        fetchData(i) {\n\n                let ID = this.MovieList[i].imdbID;\n                const url = \"https://www.omdbapi.com/?apikey=385748cd&i=tt1119646\";\n                console.log(ID)\n                fetch(url)\n                    .then(response => {\n                        this.data.push(response.data)\n                        console.log(response.data)\n                    })\n                    .catch(error => {\n                        console.error('Panic at the disco:', error);\n                    })\n        \n            console.log(this.data)\n\n        },\n    },\n    mounted() {\n        this.getFavoriteMovies();\n    }\n\n}\n\n</script>\n<style scoped></style>"],"mappings":";;EACSA,SAAS,EAAC;AAAO;gCAClBC,mBAAA,CAAkB;EAAbC,EAAE,EAAC;AAAG;oBAAXC,UAAkB,C;;uBADtBC,mBAAA,CAGM,OAHNC,UAGM,EAJV,IAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}