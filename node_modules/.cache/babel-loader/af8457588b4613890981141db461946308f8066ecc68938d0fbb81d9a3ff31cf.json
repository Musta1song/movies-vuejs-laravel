{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-19c2e88f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"text-field-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \" Poster \"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Title\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Jahr\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Zu Favoriten hinzufügen\")], -1 /* HOISTED */));\nconst _hoisted_3 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_svg_icon = _resolveComponent(\"svg-icon\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_v_text_field, {\n    label: \"Titel\",\n    variant: \"outlined\",\n    modelValue: this.title,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => this.title = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n    label: \"Erscheinungsjahr\",\n    variant: \"outlined\",\n    modelValue: this.year,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => this.year = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createVNode(_component_v_btn, {\n    id: \"SearchBt\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.SearchMovies())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Suchen \"), _createVNode(_component_svg_icon, {\n      type: \"mdi\",\n      path: $data.path2\n    }, null, 8 /* PROPS */, [\"path\"])]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", null, [_createElementVNode(\"table\", null, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data[0], x => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: x\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: x.Poster,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_3)]), _createElementVNode(\"td\", null, _toDisplayString(x.Title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(x.Year), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n      onClick: $event => $options.addToFavorites(x.imdbID),\n      id: x.imdbID,\n      class: \"FavoritesBt\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_svg_icon, {\n        type: \"mdi\",\n        path: $data.path\n      }, null, 8 /* PROPS */, [\"path\"])]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"id\"])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_createVNode","_component_v_text_field","label","variant","modelValue","title","_cache","$event","year","_component_v_btn","id","onClick","$options","SearchMovies","default","_withCtx","_createTextVNode","_component_svg_icon","type","path","$data","path2","_","_hoisted_2","_renderList","data","x","key","src","Poster","alt","_hoisted_3","_toDisplayString","Title","Year","addToFavorites","imdbID"],"sources":["/home/mustafa/Dokumente/GitHub/vuemovies/src/components/search/search.vue"],"sourcesContent":["<template>\n    <div class=\"text-field-container\">\n        <v-text-field label=\"Titel\" variant=\"outlined\" v-model=\"this.title\"></v-text-field>\n        <v-text-field label=\"Erscheinungsjahr\" variant=\"outlined\" v-model=\"this.year\"></v-text-field>\n    </div>\n    <v-btn id=\"SearchBt\" v-on:click=\"SearchMovies()\">Suchen <svg-icon type=\"mdi\" :path=\"path2\"></svg-icon>\n    </v-btn>\n    <div>\n        <table>\n            <tr>\n                <th>\n                    Poster\n                </th>\n                <th>Title</th>\n                <th>Jahr</th>\n                <th>Zu Favoriten hinzufügen</th>\n\n\n            </tr>\n            <tr v-for=\"x in data[0] \" :key=\"x\">\n                <td><img :src=\"x.Poster\" alt=\"\"></td>\n                <td>{{ x.Title }}</td>\n                <td>{{ x.Year }}</td>\n                <td> <v-btn v-on:click=\"addToFavorites(x.imdbID)\" :id=\"x.imdbID\" class=\"FavoritesBt\"><svg-icon\n                            type=\"mdi\" :path=\"path\"></svg-icon>\n\n                    </v-btn>\n                </td>\n            </tr>\n        </table>\n    </div>\n\n</template>\n<script>\nimport DataService from '@/DataService';\nimport axios from 'axios';\nimport SvgIcon from '@jamescoyle/vue-icon';\nimport { mdiHeart, mdiMagnify } from '@mdi/js';\n\n\n\nexport default {\n    name: 'SearchMovies',\n\n    components: {\n        SvgIcon\n    },\n    data() {\n        return {\n\n            title: null,\n            year: null,\n            this: null,\n            data: [],\n            favoritemovie: null,\n            isLoading: false,\n            err: \"\",\n            path: mdiHeart,\n            path2: mdiMagnify,\n            favoritemovies: []\n\n\n        };\n    },\n    methods: {\n\n        SearchMovies() {\n            this.data.length = 0\n            if (this.title == null && this.year == null) {\n                alert(\"Geben Sie erst einen Titel oder ein Jahr ein.\")\n                return\n            }\n            else {\n\n                let titleParam = \"\"\n                let yearParam = \"\"\n                let typeParam = \"&type=movie\"\n\n                if (this.title != null) {\n                    titleParam = `s=${this.title}`\n                }\n                if (this.year != null) {\n                    yearParam = `&y=${this.year}`\n                }\n                let Searchthis = titleParam + yearParam + typeParam\n                console.log(Searchthis)\n                let url = `http://www.omdbapi.com/?apikey=385748cd&${Searchthis}`;\n                console.log(url)\n\n                this.fetchMovies(url)\n            }\n        },\n        getFavoriteMovies() {\n            DataService.getAll()\n                .then(response => {\n                    this.favoritemovies = response.data\n                    console.log(this.favoritemovies)\n                    this.favoritemovies = JSON.parse(JSON.stringify(this.favoritemovies))\n                    console.log(this.favoritemovies)\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n        },\n        searchFavoriteMovies() {\n            for (let i = 0; i < this.favoritemovies.length; i++) {\n                console.log(i+\"I\")\n                for (let j = 0; j < this.data.length; j++) {\n                    console.log(j+\"j\")\n                    if (this.favoritemovies[i].imdbID === this.data[j].imdbID) {\n                        console.log(\"found\")\n                        this.disableFavoriteMovies(j)\n                    }\n                }\n            }\n        },\n\n        disableFavoriteMovies(j) {\n            let movie = document.getElementById(this.data[j].imdbID)\n            movie.style.backgroundColor = \"green\"\n            console.log(\"color red\")\n            movie.disabled = true;\n\n        },\n\n\n        fetchMovies(url) {\n            axios.get(url).then(\n                response => {\n                    this.data.push(response.data.Search)\n                }\n            )\n\n            console.log(this.data)\n            this.searchFavoriteMovies()\n        },\n        addToFavorites(ID) {\n            console.log(ID)\n            let MovieData = {\n                imdbID: ID\n            }\n\n            DataService.create(MovieData).then(response => {\n                console.log(response.data);\n                alert(\"Film wurde zu Favoriten hinzugefügt!\")\n                this.submitted = true;\n            })\n                .catch(e => {\n                    console.log(e);\n                });\n\n        }\n\n\n    },\n    mounted() {\n        this.getFavoriteMovies()\n    }\n}\n\n</script>\n<style scoped>\nimg {\n    max-height: 150px;\n}\n\ntable {\n    min-width: 90%;\n}\n\n.FavoritesBt {\n    background-color: rgb(247, 121, 121)\n}\n\n#SearchBt {}\n\n.text-field-container {\n    display: flex;\n    margin-top: 10px;\n}\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAsB;gEAQzBC,mBAAA,CASK,a,aARDA,mBAAA,CAEK,YAFD,UAEJ,G,aACAA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAgC,YAA5B,yBAAuB,E;mBAf3C;;;;;uBAAAC,mBAAA,CAAAC,SAAA,SACIF,mBAAA,CAGM,OAHNG,UAGM,GAFFC,YAAA,CAAmFC,uBAAA;IAArEC,KAAK,EAAC,OAAO;IAACC,OAAO,EAAC,UAAU;IAFtDC,UAAA,OAEqEC,KAAK;IAF1E,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAEqEF,KAAK,GAAAE,MAAA;2CAClEP,YAAA,CAA6FC,uBAAA;IAA/EC,KAAK,EAAC,kBAAkB;IAACC,OAAO,EAAC,UAAU;IAHjEC,UAAA,OAGgFI,IAAI;IAHpF,uBAAAF,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAGgFC,IAAI,GAAAD,MAAA;6CAEhFP,YAAA,CACQS,gBAAA;IADDC,EAAE,EAAC,UAAU;IAAMC,OAAK,EAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEK,QAAA,CAAAC,YAAY;;IALjDC,OAAA,EAAAC,QAAA,CAKqD,MAAO,CAL5DC,gBAAA,CAKqD,SAAO,GAAAhB,YAAA,CAA8CiB,mBAAA;MAApCC,IAAI,EAAC,KAAK;MAAEC,IAAI,EAAEC,KAAA,CAAAC;;IALxFC,CAAA;MAOI1B,mBAAA,CAuBM,cAtBFA,mBAAA,CAqBQ,gBApBJ2B,UASK,G,kBACL1B,mBAAA,CASKC,SAAA,QA5BjB0B,WAAA,CAmB4BJ,KAAA,CAAAK,IAAI,KAATC,CAAC;yBAAZ7B,mBAAA,CASK;MATsB8B,GAAG,EAAED;IAAC,IAC7B9B,mBAAA,CAAqC,aAAjCA,mBAAA,CAA4B;MAAtBgC,GAAG,EAAEF,CAAC,CAACG,MAAM;MAAEC,GAAG,EAAC;4BApB7CC,UAAA,E,GAqBgBnC,mBAAA,CAAsB,YAAAoC,gBAAA,CAAfN,CAAC,CAACO,KAAK,kBACdrC,mBAAA,CAAqB,YAAAoC,gBAAA,CAAdN,CAAC,CAACQ,IAAI,kBACbtC,mBAAA,CAIK,aAJAI,YAAA,CAGOS,gBAAA;MAHKE,OAAK,EAAAJ,MAAA,IAAEK,QAAA,CAAAuB,cAAc,CAACT,CAAC,CAACU,MAAM;MAAI1B,EAAE,EAAEgB,CAAC,CAACU,MAAM;MAAEzC,KAAK,EAAC;;MAvBvFmB,OAAA,EAAAC,QAAA,CAuBqG,MACtC,CADsCf,YAAA,CACtCiB,mBAAA;QAAnCC,IAAI,EAAC,KAAK;QAAEC,IAAI,EAAEC,KAAA,CAAAD;;MAxB9CG,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}