{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return null;\n}","map":{"version":3,"names":[],"sources":["/home/mustafa/Dokumente/GitHub/vuemovies/movies/src/components/search/search.vue"],"sourcesContent":["<template></template>\n<script>\nexport default {\n    name: Search,\n    data() {\n        return {\n\n            title: null,\n            year: null,\n            params: null,\n            data: [],\n            favoritemovie: null,\n            isLoading: false,\n            err: \"\"\n        };\n    },\n    methods: {\n\n\n        SearchMovies() {\n            if (params.title == null && params.year == null) {\n                alert(\"Geben Sie erst einen Titel oder ein Jahr ein.\")\n                return\n            }\n            else {\n                let ddiv = document.getElementById(\"ddiv\")\n                ddiv.style.visibility = \"visible\"\n\n                let titleParam = \"\"\n                let yearParam = \"\"\n                let typeParam = \"&type=movie\"\n\n                if (params.title != null) {\n                    titleParam = `s=${params.title}`\n                }\n                if (params.year != null) {\n                    yearParam = `&y=${params.year}`\n                }\n                let SearchParams = titleParam + yearParam + typeParam\n                let url = `http://www.omdbapi.com/?apikey=385748cd&${SearchParams}`;\n                console.log(url)\n\n                sFetch(url)\n            }\n        },\n\n\n        async sFetch(url) {\n            try {\n                const response = await fetch(url, {\n                    method: 'GET',\n                    headers: {\n                        Accept: 'application/json',\n                    },\n                });\n\n                if (!response.ok) {\n                    throw new Error(`Error! status: ${response.status}`);\n                }\n\n                const result = await response.json();\n\n                console.log(result.Search)\n\n                setData(result.Search);\n            } catch (err) {\n                setErr(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n            console.log(data)\n        }\n\n\n    }\n}\n\n</script>\n<style scoped>\n.ddiv {\n    display: flex;\n    justify-content: center;\n    margin-left: 10px;\n    visibility: hidden;\n\n}\n\n.Datagrid {\n    height: 1000px;\n}\n\nimg {\n    height: 140px;\n}\n\n.ddiv {\n    display: flex;\n    justify-content: center;\n    max-width: 1000px;\n}\n\n#DataGridDiv {\n    display: flex;\n    justify-content: center;\n}\n\n\n.SearchAndAdd {\n    display: flex;\n    justify-content: center;\n}\n\n#SaveBt {\n    color: red;\n    font-size: 30px;\n    background-color: antiquewhite;\n}\n\n#HeartIcon {}\n</style>"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}