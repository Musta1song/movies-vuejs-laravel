{"ast":null,"code":"export default {\n  name: Search,\n  data() {\n    return {\n      title: null,\n      year: null,\n      params: null,\n      data: [],\n      favoritemovie: null,\n      isLoading: false,\n      err: \"\"\n    };\n  },\n  methods: {\n    SearchMovies() {\n      if (params.title == null && params.year == null) {\n        alert(\"Geben Sie erst einen Titel oder ein Jahr ein.\");\n        return;\n      } else {\n        let ddiv = document.getElementById(\"ddiv\");\n        ddiv.style.visibility = \"visible\";\n        let titleParam = \"\";\n        let yearParam = \"\";\n        let typeParam = \"&type=movie\";\n        if (params.title != null) {\n          titleParam = `s=${params.title}`;\n        }\n        if (params.year != null) {\n          yearParam = `&y=${params.year}`;\n        }\n        let SearchParams = titleParam + yearParam + typeParam;\n        let url = `http://www.omdbapi.com/?apikey=385748cd&${SearchParams}`;\n        console.log(url);\n        sFetch(url);\n      }\n    },\n    async sFetch(url) {\n      try {\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Error! status: ${response.status}`);\n        }\n        const result = await response.json();\n        console.log(result.Search);\n        setData(result.Search);\n      } catch (err) {\n        setErr(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n      console.log(data);\n    }\n  }\n};","map":{"version":3,"names":["name","Search","data","title","year","params","favoritemovie","isLoading","err","methods","SearchMovies","alert","ddiv","document","getElementById","style","visibility","titleParam","yearParam","typeParam","SearchParams","url","console","log","sFetch","response","fetch","method","headers","Accept","ok","Error","status","result","json","setData","setErr","message","setIsLoading"],"sources":["/home/mustafa/Dokumente/GitHub/vuemovies/movies/src/components/search/search.vue"],"sourcesContent":["<template></template>\n<script>\nexport default {\n    name: Search,\n    data() {\n        return {\n\n            title: null,\n            year: null,\n            params: null,\n            data: [],\n            favoritemovie: null,\n            isLoading: false,\n            err: \"\"\n        };\n    },\n    methods: {\n\n\n        SearchMovies() {\n            if (params.title == null && params.year == null) {\n                alert(\"Geben Sie erst einen Titel oder ein Jahr ein.\")\n                return\n            }\n            else {\n                let ddiv = document.getElementById(\"ddiv\")\n                ddiv.style.visibility = \"visible\"\n\n                let titleParam = \"\"\n                let yearParam = \"\"\n                let typeParam = \"&type=movie\"\n\n                if (params.title != null) {\n                    titleParam = `s=${params.title}`\n                }\n                if (params.year != null) {\n                    yearParam = `&y=${params.year}`\n                }\n                let SearchParams = titleParam + yearParam + typeParam\n                let url = `http://www.omdbapi.com/?apikey=385748cd&${SearchParams}`;\n                console.log(url)\n\n                sFetch(url)\n            }\n        },\n\n\n        async sFetch(url) {\n            try {\n                const response = await fetch(url, {\n                    method: 'GET',\n                    headers: {\n                        Accept: 'application/json',\n                    },\n                });\n\n                if (!response.ok) {\n                    throw new Error(`Error! status: ${response.status}`);\n                }\n\n                const result = await response.json();\n\n                console.log(result.Search)\n\n                setData(result.Search);\n            } catch (err) {\n                setErr(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n            console.log(data)\n        }\n\n\n    }\n}\n\n</script>\n<style scoped>\n.ddiv {\n    display: flex;\n    justify-content: center;\n    margin-left: 10px;\n    visibility: hidden;\n\n}\n\n.Datagrid {\n    height: 1000px;\n}\n\nimg {\n    height: 140px;\n}\n\n.ddiv {\n    display: flex;\n    justify-content: center;\n    max-width: 1000px;\n}\n\n#DataGridDiv {\n    display: flex;\n    justify-content: center;\n}\n\n\n.SearchAndAdd {\n    display: flex;\n    justify-content: center;\n}\n\n#SaveBt {\n    color: red;\n    font-size: 30px;\n    background-color: antiquewhite;\n}\n\n#HeartIcon {}\n</style>"],"mappings":"AAEA,eAAe;EACXA,IAAI,EAAEC,MAAM;EACZC,IAAIA,CAAA,EAAG;IACH,OAAO;MAEHC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,IAAI;MACVC,MAAM,EAAE,IAAI;MACZH,IAAI,EAAE,EAAE;MACRI,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAE,KAAK;MAChBC,GAAG,EAAE;IACT,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IAGLC,YAAYA,CAAA,EAAG;MACX,IAAIL,MAAM,CAACF,KAAI,IAAK,IAAG,IAAKE,MAAM,CAACD,IAAG,IAAK,IAAI,EAAE;QAC7CO,KAAK,CAAC,+CAA+C;QACrD;MACJ,OACK;QACD,IAAIC,IAAG,GAAIC,QAAQ,CAACC,cAAc,CAAC,MAAM;QACzCF,IAAI,CAACG,KAAK,CAACC,UAAS,GAAI,SAAQ;QAEhC,IAAIC,UAAS,GAAI,EAAC;QAClB,IAAIC,SAAQ,GAAI,EAAC;QACjB,IAAIC,SAAQ,GAAI,aAAY;QAE5B,IAAId,MAAM,CAACF,KAAI,IAAK,IAAI,EAAE;UACtBc,UAAS,GAAK,KAAIZ,MAAM,CAACF,KAAM;QACnC;QACA,IAAIE,MAAM,CAACD,IAAG,IAAK,IAAI,EAAE;UACrBc,SAAQ,GAAK,MAAKb,MAAM,CAACD,IAAK;QAClC;QACA,IAAIgB,YAAW,GAAIH,UAAS,GAAIC,SAAQ,GAAIC,SAAQ;QACpD,IAAIE,GAAE,GAAK,2CAA0CD,YAAa,EAAC;QACnEE,OAAO,CAACC,GAAG,CAACF,GAAG;QAEfG,MAAM,CAACH,GAAG;MACd;IACJ,CAAC;IAGD,MAAMG,MAAMA,CAACH,GAAG,EAAE;MACd,IAAI;QACA,MAAMI,QAAO,GAAI,MAAMC,KAAK,CAACL,GAAG,EAAE;UAC9BM,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACLC,MAAM,EAAE;UACZ;QACJ,CAAC,CAAC;QAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,kBAAiBN,QAAQ,CAACO,MAAO,EAAC,CAAC;QACxD;QAEA,MAAMC,MAAK,GAAI,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAEpCZ,OAAO,CAACC,GAAG,CAACU,MAAM,CAAChC,MAAM;QAEzBkC,OAAO,CAACF,MAAM,CAAChC,MAAM,CAAC;MAC1B,EAAE,OAAOO,GAAG,EAAE;QACV4B,MAAM,CAAC5B,GAAG,CAAC6B,OAAO,CAAC;MACvB,UAAU;QACNC,YAAY,CAAC,KAAK,CAAC;MACvB;MACAhB,OAAO,CAACC,GAAG,CAACrB,IAAI;IACpB;EAGJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}