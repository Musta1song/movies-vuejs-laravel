{"ast":null,"code":"import ApiService from \"@/DataService\";\nexport default {\n  name: \"Favorites\",\n  data() {\n    return {\n      data: [],\n      MovieList: [],\n      isLoading: false,\n      err: \"\"\n    };\n  },\n  methods: {\n    getFavoriteMovies() {\n      ApiService.getAll().then(response => {\n        console.log(response.data);\n        setMovieList(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    async fetchData() {\n      try {\n        const promises = MovieList.map(async movie => {\n          let ID = movie.imdbID;\n          let url = `http://www.omdbapi.com/?apikey=385748cd&i=${ID}`;\n          console.log(ID);\n          const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n              Accept: 'application/json'\n            }\n          });\n          if (!response.ok) {\n            throw new Error(`Error! status: ${response.status}`);\n          }\n          const result = await response.json();\n          return result;\n        });\n        const results = await Promise.all(promises);\n        setData(results);\n        console.log(results);\n      } catch (err) {\n        setErr(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n      console.log(data);\n      document.getElementById(\"1\").innerHTML = \"<img src={data[0].Poster} alt=''></img> \";\n    }\n  }\n};","map":{"version":3,"names":["ApiService","name","data","MovieList","isLoading","err","methods","getFavoriteMovies","getAll","then","response","console","log","setMovieList","catch","e","fetchData","promises","map","movie","ID","imdbID","url","fetch","method","headers","Accept","ok","Error","status","result","json","results","Promise","all","setData","setErr","message","setIsLoading","document","getElementById","innerHTML"],"sources":["/home/mustafa/Dokumente/GitHub/vuemovies/movies/src/components/favorites/favorites.vue"],"sourcesContent":["<template>\n    <div className=\"rates\">\n        <div id='1'></div>\n\n    </div>\n</template>\n<script>\nimport ApiService from \"@/DataService\";\nexport default {\n    name: \"Favorites\",\n\n    data() {\n        return {\n            data: [],\n            MovieList: [],\n            isLoading: false,\n            err: \"\"\n\n        };\n    },\n\n    methods: {\n        getFavoriteMovies() {\n            ApiService.getAll()\n                .then(response => {\n                    console.log(response.data)\n                    setMovieList(response.data);\n\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n\n\n        },\n        async fetchData() {\n            try {\n                const promises = MovieList.map(async (movie) => {\n\n                    let ID = movie.imdbID;\n                    let url = `http://www.omdbapi.com/?apikey=385748cd&i=${ID}`;\n                    console.log(ID)\n\n                    const response = await fetch(url, {\n                        method: 'GET',\n                        headers: {\n                            Accept: 'application/json',\n                        },\n                    });\n\n                    if (!response.ok) {\n                        throw new Error(`Error! status: ${response.status}`);\n                    }\n\n                    const result = await response.json();\n                    return result;\n                });\n\n                const results = await Promise.all(promises);\n                setData(results);\n                console.log(results)\n            } catch (err) {\n                setErr(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n            console.log(data)\n\n            document.getElementById(\"1\").innerHTML = \"<img src={data[0].Poster} alt=''></img> \"\n\n        },\n\n\n\n    }\n}\n\n</script>\n<style scoped></style>"],"mappings":"AAOA,OAAOA,UAAS,MAAO,eAAe;AACtC,eAAe;EACXC,IAAI,EAAE,WAAW;EAEjBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHA,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,KAAK;MAChBC,GAAG,EAAE;IAET,CAAC;EACL,CAAC;EAEDC,OAAO,EAAE;IACLC,iBAAiBA,CAAA,EAAG;MAChBP,UAAU,CAACQ,MAAM,CAAC,EACbC,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACR,IAAI;QACzBW,YAAY,CAACH,QAAQ,CAACR,IAAI,CAAC;MAE/B,CAAC,EACAY,KAAK,CAACC,CAAA,IAAK;QACRJ,OAAO,CAACC,GAAG,CAACG,CAAC,CAAC;MAClB,CAAC,CAAC;IAGV,CAAC;IACD,MAAMC,SAASA,CAAA,EAAG;MACd,IAAI;QACA,MAAMC,QAAO,GAAId,SAAS,CAACe,GAAG,CAAC,MAAOC,KAAK,IAAK;UAE5C,IAAIC,EAAC,GAAID,KAAK,CAACE,MAAM;UACrB,IAAIC,GAAE,GAAK,6CAA4CF,EAAG,EAAC;UAC3DT,OAAO,CAACC,GAAG,CAACQ,EAAE;UAEd,MAAMV,QAAO,GAAI,MAAMa,KAAK,CAACD,GAAG,EAAE;YAC9BE,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cACLC,MAAM,EAAE;YACZ;UACJ,CAAC,CAAC;UAEF,IAAI,CAAChB,QAAQ,CAACiB,EAAE,EAAE;YACd,MAAM,IAAIC,KAAK,CAAE,kBAAiBlB,QAAQ,CAACmB,MAAO,EAAC,CAAC;UACxD;UAEA,MAAMC,MAAK,GAAI,MAAMpB,QAAQ,CAACqB,IAAI,CAAC,CAAC;UACpC,OAAOD,MAAM;QACjB,CAAC,CAAC;QAEF,MAAME,OAAM,GAAI,MAAMC,OAAO,CAACC,GAAG,CAACjB,QAAQ,CAAC;QAC3CkB,OAAO,CAACH,OAAO,CAAC;QAChBrB,OAAO,CAACC,GAAG,CAACoB,OAAO;MACvB,EAAE,OAAO3B,GAAG,EAAE;QACV+B,MAAM,CAAC/B,GAAG,CAACgC,OAAO,CAAC;MACvB,UAAU;QACNC,YAAY,CAAC,KAAK,CAAC;MACvB;MACA3B,OAAO,CAACC,GAAG,CAACV,IAAI;MAEhBqC,QAAQ,CAACC,cAAc,CAAC,GAAG,CAAC,CAACC,SAAQ,GAAI,0CAAyC;IAEtF;EAIJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}