{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-19c2e88f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"ddiv\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _directive_click = _resolveDirective(\"click\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_text_field, {\n    label: \"Titel\",\n    variant: \"outlined\",\n    modelValue: this.title,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => this.title = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n    label: \"Erscheinungsjahr\",\n    variant: \"outlined\",\n    modelValue: this.year,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => this.year = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _withDirectives(_createVNode(_component_v_btn, null, null, 512 /* NEED_PATCH */), [[_directive_click, $options.SearchMovies()]]), _createVNode(_component_v_data_table, {\n    items: this.data\n  }, null, 8 /* PROPS */, [\"items\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_v_text_field","label","variant","modelValue","title","_cache","$event","year","_component_v_btn","$options","SearchMovies","_component_v_data_table","items","data"],"sources":["/home/mustafa/Dokumente/GitHub/vuemovies/movies/src/components/search/search.vue"],"sourcesContent":["<template>\n    <div class=\"ddiv\">\n        <v-text-field label=\"Titel\" variant=\"outlined\" v-model=\"this.title\"></v-text-field>\n        <v-text-field label=\"Erscheinungsjahr\" variant=\"outlined\" v-model=\"this.year\"></v-text-field>\n        <v-btn v-click=\"SearchMovies()\"></v-btn>\n\n        <v-data-table :items=\"this.data\"></v-data-table>\n\n    </div>\n</template>\n<script>\nexport default {\n    name: 'SearchMovies',\n    data() {\n        return {\n            title: null,\n            year: null,\n            this: null,\n            data: [],\n            favoritemovie: null,\n            isLoading: false,\n            err: \"\",\n\n\n        };\n    },\n    methods: {\n\n\n        SearchMovies() {\n            if (this.title == null && this.year == null) {\n                alert(\"Geben Sie erst einen Titel oder ein Jahr ein.\")\n                return\n            }\n            else {\n                let ddiv = document.getElementById(\"ddiv\")\n                ddiv.style.visibility = \"visible\"\n\n                let titleParam = \"\"\n                let yearParam = \"\"\n                let typeParam = \"&type=movie\"\n\n                if (this.title != null) {\n                    titleParam = `s=${this.title}`\n                }\n                if (this.year != null) {\n                    yearParam = `&y=${this.year}`\n                }\n                let Searchthis = titleParam + yearParam + typeParam\n                let url = `http://www.omdbapi.com/?apikey=385748cd&${Searchthis}`;\n                console.log(url)\n\n                this.fetchMovies(url)\n            }\n        },\n\n\n        async fetchMovies(url) {\n            try {\n                const response = await fetch(url, {\n                    method: 'GET',\n                    headers: {\n                        Accept: 'application/json',\n                    },\n                });\n\n                if (!response.ok) {\n                    throw new Error(`Error! status: ${response.status}`);\n                }\n\n                const result = await response.json();\n\n                console.log(result.Search)\n\n                this.data = result.Search;\n            } catch (err) {\n                this.err = err.message;\n            } finally {\n                this.isLoading = false;\n            }\n            console.log(this.data)\n        }\n\n\n    }\n}\n\n</script>\n<style scoped>\n\n\n.Datagrid {\n    height: 1000px;\n}\n\nimg {\n    height: 140px;\n}\n\n\n\n#DataGridDiv {\n    display: flex;\n    justify-content: center;\n}\n\n\n.SearchAndAdd {\n    display: flex;\n    justify-content: center;\n}\n\n#SaveBt {\n    color: red;\n    font-size: 30px;\n    background-color: antiquewhite;\n}\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAM;;;;;;uBAAjBC,mBAAA,CAOM,OAPNC,UAOM,GANFC,YAAA,CAAmFC,uBAAA;IAArEC,KAAK,EAAC,OAAO;IAACC,OAAO,EAAC,UAAU;IAFtDC,UAAA,OAEqEC,KAAK;IAF1E,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAEqEF,KAAK,GAAAE,MAAA;2CAClEP,YAAA,CAA6FC,uBAAA;IAA/EC,KAAK,EAAC,kBAAkB;IAACC,OAAO,EAAC,UAAU;IAHjEC,UAAA,OAGgFI,IAAI;IAHpF,uBAAAF,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAGgFC,IAAI,GAAAD,MAAA;2DAC5EP,YAAA,CAAwCS,gBAAA,sC,mBAAxBC,QAAA,CAAAC,YAAY,I,GAE5BX,YAAA,CAAgDY,uBAAA;IAAjCC,KAAK,OAAOC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}