{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ApiService from \"@/DataService\";\nexport default {\n  name: \"FavoriteMovies\",\n  data() {\n    return {\n      data: [],\n      MovieList: [],\n      isLoading: false,\n      err: \"\"\n    };\n  },\n  methods: {\n    getFavoriteMovies() {\n      ApiService.getAll().then(response => {\n        this.MovieList = response.data;\n        console.log(this.MovieList);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    async fetchData() {\n      let Arr = [];\n      try {\n        for (let i = 0; i < this.MovieList.length; i++) {\n          let ID = this.MovieList[i].imdbID;\n          let url = `http://www.omdbapi.com/?apikey=385748cd&i=${ID}`;\n          console.log(ID);\n          const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n              Accept: 'application/json'\n            }\n          });\n          if (!response.ok) {\n            throw new Error(`Error! status: ${response.status}`);\n          }\n          const result = await response.json();\n          Arr.push(result);\n        }\n        this.data = Arr;\n        console.log(Arr);\n      } catch (err) {\n        this.err = err.message;\n      } finally {\n        this.isLoading = false;\n      }\n      console.log(this.data);\n    }\n  },\n  mounted() {\n    this.getFavoriteMovies();\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["ApiService","name","data","MovieList","isLoading","err","methods","getFavoriteMovies","getAll","then","response","console","log","catch","e","fetchData","Arr","i","length","ID","imdbID","url","fetch","method","headers","Accept","ok","Error","status","result","json","push","message","mounted"],"sources":["/home/mustafa/Dokumente/GitHub/vuemovies/movies/src/components/favorites/FavoriteMovies.vue"],"sourcesContent":["<template>\n    <div className=\"rates\">\n        <div id='1'></div>\n\n    </div>\n</template>\n<script>\nimport ApiService from \"@/DataService\";\nexport default {\n    name: \"FavoriteMovies\",\n\n    data() {\n        return {\n            data: [],\n            MovieList: [],\n            isLoading: false,\n            err: \"\"\n\n        };\n    },\n\n    methods: {\n        getFavoriteMovies() {\n            ApiService.getAll()\n                .then(response => {\n                    this.MovieList = response.data;\n                    console.log(this.MovieList)\n\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n\n\n        },\n        async fetchData() {\n            let Arr = []\n            try {\n                for (let i = 0; i < this.MovieList.length; i++) {\n\n                    let ID = this.MovieList[i].imdbID;\n                    let url = `http://www.omdbapi.com/?apikey=385748cd&i=${ID}`;\n                    console.log(ID)\n\n                    const response = await fetch(url, {\n                        method: 'GET',\n                        headers: {\n                            Accept: 'application/json',\n                        },\n                    });\n\n                    if (!response.ok) {\n                        throw new Error(`Error! status: ${response.status}`);\n                    }\n\n                    const result = await response.json();\n                    Arr.push(result)\n                }\n\n                this.data = Arr;\n                console.log(Arr)\n            } catch (err) {\n                this.err = err.message;\n            } finally {\n                this.isLoading = false;\n            }\n            console.log(this.data)\n\n\n        },\n    },\n    mounted() {\n        this.getFavoriteMovies();\n        this.fetchData();\n    }\n\n}\n\n</script>\n<style scoped></style>"],"mappings":";AAOA,OAAOA,UAAS,MAAO,eAAe;AACtC,eAAe;EACXC,IAAI,EAAE,gBAAgB;EAEtBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHA,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,KAAK;MAChBC,GAAG,EAAE;IAET,CAAC;EACL,CAAC;EAEDC,OAAO,EAAE;IACLC,iBAAiBA,CAAA,EAAG;MAChBP,UAAU,CAACQ,MAAM,CAAC,EACbC,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACP,SAAQ,GAAIO,QAAQ,CAACR,IAAI;QAC9BS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,SAAS;MAE9B,CAAC,EACAU,KAAK,CAACC,CAAA,IAAK;QACRH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAClB,CAAC,CAAC;IAGV,CAAC;IACD,MAAMC,SAASA,CAAA,EAAG;MACd,IAAIC,GAAE,GAAI,EAAC;MACX,IAAI;QACA,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACd,SAAS,CAACe,MAAM,EAAED,CAAC,EAAE,EAAE;UAE5C,IAAIE,EAAC,GAAI,IAAI,CAAChB,SAAS,CAACc,CAAC,CAAC,CAACG,MAAM;UACjC,IAAIC,GAAE,GAAK,6CAA4CF,EAAG,EAAC;UAC3DR,OAAO,CAACC,GAAG,CAACO,EAAE;UAEd,MAAMT,QAAO,GAAI,MAAMY,KAAK,CAACD,GAAG,EAAE;YAC9BE,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cACLC,MAAM,EAAE;YACZ;UACJ,CAAC,CAAC;UAEF,IAAI,CAACf,QAAQ,CAACgB,EAAE,EAAE;YACd,MAAM,IAAIC,KAAK,CAAE,kBAAiBjB,QAAQ,CAACkB,MAAO,EAAC,CAAC;UACxD;UAEA,MAAMC,MAAK,GAAI,MAAMnB,QAAQ,CAACoB,IAAI,CAAC,CAAC;UACpCd,GAAG,CAACe,IAAI,CAACF,MAAM;QACnB;QAEA,IAAI,CAAC3B,IAAG,GAAIc,GAAG;QACfL,OAAO,CAACC,GAAG,CAACI,GAAG;MACnB,EAAE,OAAOX,GAAG,EAAE;QACV,IAAI,CAACA,GAAE,GAAIA,GAAG,CAAC2B,OAAO;MAC1B,UAAU;QACN,IAAI,CAAC5B,SAAQ,GAAI,KAAK;MAC1B;MACAO,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,IAAI;IAGzB;EACJ,CAAC;EACD+B,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC1B,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACQ,SAAS,CAAC,CAAC;EACpB;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}